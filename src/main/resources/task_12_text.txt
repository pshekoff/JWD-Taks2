1.  The if-then and if-then-else Statements 
1.1.  The if-then Statement 
The if-then statement is the most  of all the control flow statements. It  your program to execute a certain section of code only if a particular test evaluates to true. For example, the Bicycle   allow the brakes to decrease the bicycle's'  only if the bicycle is already in motion. One possible implementation of the applyBrakes method  be as follows: 
void applyBrakes() {
    // the "if" clause: bicycle must be moving
    if (isMoving){ 
        // the "then" clause: decrease current speed
        currentSpeed--;
    }
}
If this test evaluates to  (meaning that the bicycle is not in motion), control  to the end of the if-then statement. 
In addition, the opening and closing braces are optional, provided that the "then" clause contains only one statement: 
void applyBrakes() {
    // same as above, but without braces 
    if (isMoving)
        currentSpeed--;
}
Deciding when to omit the braces is a matter of personal . Omitting them can make the code more brittle. If a second statement is  added to the "then" clause, a common mistake  be forgetting to add the  required braces. The compiler cannot  this sort of error; you'll' just get the  results. 
1.2.  The if-then-else Statement 
The if-then-else statement provides a secondary path of execution when an "if" clause evaluates to . You  use an if-then-else statement in the applyBrakes method to take some action if the brakes are applied when the bicycle is not in motion. In this case, the action is to simply  an error message stating that the bicycle has already stopped. 
void applyBrakes() {
    if (isMoving) {
        currentSpeed--;
    } else {
        System.err.println("The bicycle has already stopped!");
    } 
}
The following program, IfElseDemo, assigns a   on the  of a test : A for a  of 90% or above, a B for a  of 80% or above, and so on. 

class IfElseDemo {
    public static void main(String[] args) {

        int testscore = 76;
        char grade;

        if (testscore >= 90) {
            grade = 'A';
        } else if (testscore >= 80) {
            grade = 'B';
        } else if (testscore >= 70) {
            grade = 'C';
        } else if (testscore >= 60) {
            grade = 'D';
        } else {
            grade = 'F';
        }
        System.out.println("Grade = " + grade);
    }
}
The output from the program is: 
    Grade = C
You may have noticed that the  of testscore can satisfy more than one expression in the compound statement: 76 >= 70 and 76 >= 60. However, once a condition is satisfied, the appropriate statements are executed ( = 'C';) and the remaining conditions are not evaluated. 
